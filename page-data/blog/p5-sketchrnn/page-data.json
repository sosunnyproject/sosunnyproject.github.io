{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/p5-sketchrnn/","result":{"data":{"markdownRemark":{"html":"<h2>0. template 코드</h2>\n<ul>\n<li><a href=\"https://editor.p5js.org/sosunnyproject/sketches/7paSvQE8N\">p5 온라인 에디터</a></li>\n<li><a href=\"https://editor.p5js.org/sosunnyproject/sketches/TE0MLII9O\">완성 코드</a></li>\n</ul>\n<h2>1. index.html 에 src 추가하기</h2>\n<ul>\n<li><a href=\"https://learn.ml5js.org/docs/#/tutorials/hello-ml5?id=code\">Your index.html</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/ml5@0.4.3/dist/ml5.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- p5 script src --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>2. QuickStart</h2>\n<ul>\n<li>모델을 preload하기 때문에 callback 파라미터는 필요 없다.</li>\n<li>\n<p>models 변수 대신에 특정 스트링 배열로 어떤 모델을 호출할지 정한다. </p>\n<ul>\n<li><a href=\"https://github.com/ml5js/ml5-library/blob/master/src/SketchRNN/models.js\">available models</a></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> sketchRNN<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">preload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  sketchRNN <span class=\"token operator\">=</span> ml5<span class=\"token punctuation\">.</span><span class=\"token function\">sketchRNN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">createCanvas</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'model loaded'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token number\">220</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>3. gotStrokePath() 메소드</h2>\n<ul>\n<li>코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 글로벌에 추가</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">gotStrokePath</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> strokePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>strokePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>결과값</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">Object <span class=\"token punctuation\">{</span>dx<span class=\"token operator\">:</span> <span class=\"token number\">-7.009424007547129</span><span class=\"token punctuation\">,</span> dy<span class=\"token operator\">:</span> <span class=\"token number\">-2.5481305925730413</span><span class=\"token punctuation\">,</span> pen<span class=\"token operator\">:</span> <span class=\"token string\">\"down\"</span><span class=\"token punctuation\">}</span>\ndx<span class=\"token operator\">:</span> <span class=\"token number\">-7.009424007547129</span>\ndy<span class=\"token operator\">:</span> <span class=\"token number\">-2.5481305925730413</span>\npen<span class=\"token operator\">:</span> <span class=\"token string\">\"down\"</span></code></pre></div>\n<h2>4. initial stroke, many strokes</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> sketchRNN<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> currentStroke<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// preload function</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">createCanvas</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sketchRNN<span class=\"token punctuation\">.</span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span>gotStrokePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  x <span class=\"token operator\">=</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'model loaded'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// gotStrokePath function</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token number\">220</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStroke<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">strokeWeight</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 1. initial stroke</span>\n    <span class=\"token function\">line</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token operator\">+</span> currentStroke<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> currentStroke<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n    <span class=\"token comment\">// 3. start currentStroke at latest point</span>\n    x <span class=\"token operator\">+=</span> currentStroke<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">+=</span> currentStroke<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 2. stroke loop</span>\n    currentStroke<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    sketchRNN<span class=\"token punctuation\">.</span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span>gotStrokePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>5. pen 의 상태</h2>\n<ul>\n<li>'down' : 그리는 중</li>\n<li>'end': 끝남</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 전역 변수</span>\n<span class=\"token keyword\">let</span> nextPen <span class=\"token operator\">=</span> <span class=\"token string\">'down'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n <span class=\"token comment\">//...</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextPen <span class=\"token operator\">==</span> <span class=\"token string\">'end'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">noLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextPen <span class=\"token operator\">==</span> <span class=\"token string\">'down'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">line</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token operator\">+</span> currentStroke<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> currentStroke<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token punctuation\">}</span>\n  x <span class=\"token operator\">+=</span> currentStroke<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">+=</span> currentStroke<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">;</span>\n  \n  nextPen <span class=\"token operator\">=</span> currentStroke<span class=\"token punctuation\">.</span>pen<span class=\"token punctuation\">;</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>6. 내 스케치와 SketchRNN 구분하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 전역 변수</span>\n<span class=\"token keyword\">let</span> seedPath <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 사람이 그린 stroke 저장</span>\n<span class=\"token keyword\">let</span> personDrawing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 사람이 그리는 상태</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">startDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person is drawing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  personDrawing <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  x <span class=\"token operator\">=</span> mouseX<span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> mouseY<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 모델이 그리는 상태</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sketchRNNStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"model is drawing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  personDrawing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  sketchRNN<span class=\"token punctuation\">.</span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span>gotStrokePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> canvas <span class=\"token operator\">=</span> <span class=\"token function\">createCanvas</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>startDrawing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>sketchRNNStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strokeWeight</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>personDrawing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> strokePath <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      dx<span class=\"token operator\">:</span> mouseX <span class=\"token operator\">-</span> pmouseX<span class=\"token punctuation\">,</span>\n      dy<span class=\"token operator\">:</span> mouseY <span class=\"token operator\">-</span> pmouseY<span class=\"token punctuation\">,</span>\n      pen<span class=\"token operator\">:</span> <span class=\"token string\">'down'</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">line</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x <span class=\"token operator\">+</span> strokePath<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> strokePath<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x <span class=\"token operator\">+=</span> strokePath<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">+=</span> strokePath<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">;</span>\n    \n    seedPath<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>strokePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>7. 내가 그린 것을 읽고, 그 이후의 stroke 를 그리도록 하기</h2>\n<ul>\n<li>seedPath 데이터를 알려줘야 함</li>\n<li>\n<p>sketchRNN.generate(gotStrokePath);</p>\n<ul>\n<li>generate 함수는 기존의 stroke 데이터를 변수로 받을 수 있다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 모델이 그리는 상태</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sketchRNNStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"model is drawing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  personDrawing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  sketchRNN<span class=\"token punctuation\">.</span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span>seedPath<span class=\"token punctuation\">,</span> gotStrokePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>8. RDP Line Simplification 알고리즘과 결합</h2>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=nSYw9GrakjY\">RDP points</a></li>\n<li>rdp.js 파일 만들기, index.html 에서 import 하기</li>\n</ul>","frontmatter":{"title":"[p5js] SketchRNN with Javascript (feat. ml5js)","category":"blog","date":"March 31, 2020"}}},"pageContext":{"slug":"/blog/p5-sketchrnn/"}},"staticQueryHashes":[]}